openapi: 3.0.1
info:
  title: Microserviço Order
  description: Gerenciamento de pedidos
  contact:
    name: Jônatas Gomes
    url: https://github.com/Jonatas-Gomes
    email: jonatas.gomes2014@hotmail.com
  version: 0.1.0
externalDocs:
  description: Repositório da aplicação
  url: https://github.com/Jonatas-Gomes/PB-SpringBoot-Final-Exam
servers:
  - url: http://localhost:8081/api
    description: URL Base da aplicação
paths:
  /pedidos/{id}:
    get:
      tags:
        - order-controller
      summary: Buscar um pedido por id
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    put:
      tags:
        - order-controller
      summary: Atualizar um pedido
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    delete:
      tags:
        - order-controller
      summary: Deletar um pedido
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /pedidos:
    get:
      tags:
        - order-controller
      summary: Buscar todos os pedidos
      operationId: findAll
      parameters:
        - name: cpf
          in: query
          required: false
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableResponse'
    post:
      tags:
        - order-controller
      summary: Cadastrar pedidos
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
  /pedidos/itens/{id}:
    patch:
      tags:
        - item-controller
      summary: Atualizar um item
      operationId: patchItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
components:
  schemas:
    AddressRequestDTO:
      required:
        - cep
        - number
      type: object
      properties:
        cep:
          pattern: ^([0-9]{8})+$
          type: string
          example: '41200365'
        number:
          pattern: ^([0-9])+$
          type: string
          example: '4143'
    OrderUpdateDTO:
      required:
        - address
        - cpf
      type: object
      properties:
        cpf:
          pattern: ^([0-9]{11})+$
          type: string
          example: '93267686512'
        address:
          $ref: '#/components/schemas/AddressRequestDTO'
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        number:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        cep:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cpf:
          type: string
        total:
          type: number
        items:
          type: object
        address:
          $ref: '#/components/schemas/Address'
    OrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    ItemDTO:
      required:
        - name
        - value
      type: object
      properties:
        name:
          pattern: ^([a-zA-ZãÃéÉíÍóÓêÊôÔáÁ ])+$
          type: string
          example: This is a name
        description:
          type: string
          example: this is a description
        expirationDate:
          type: string
          format: date
          pattern: ^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$
          example: '28-02-2023'
        value:
          type: number
          example: 25
    OrderDTO:
      required:
        - address
        - cpf
        - items
      type: object
      properties:
        cpf:
          pattern: ^([0-9]{11})+$
          type: string
          example: '93267686512'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDTO'
        address:
          $ref: '#/components/schemas/AddressRequestDTO'
    ItemResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        value:
          type: number
        creationDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
          example: 0
        size:
          minimum: 1
          type: integer
          format: int32
          example: 15
        sort:
          type: array
          example: 
          items:
            type: string
            example: 
    PageableResponse:
      type: object
      properties:
        numberOfElements:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
